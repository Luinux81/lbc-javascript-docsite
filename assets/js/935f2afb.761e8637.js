"use strict";(self.webpackChunklbc_javascript_docusite=self.webpackChunklbc_javascript_docusite||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Intro","href":"/lbc-javascript-docusite/docs/intro","docId":"intro"},{"type":"category","label":"Basics","collapsible":true,"collapsed":true,"customProps":{"description":"Javascript Basics"},"items":[{"type":"link","label":"Variables","href":"/lbc-javascript-docusite/docs/Basics/variables","docId":"Basics/variables"},{"type":"link","label":"Objetos","href":"/lbc-javascript-docusite/docs/Basics/Objetos","docId":"Basics/Objetos"},{"type":"category","label":"Iterables","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Arrays","href":"/lbc-javascript-docusite/docs/Basics/Iterables/Arrays","docId":"Basics/Iterables/Arrays"},{"type":"link","label":"Maps","href":"/lbc-javascript-docusite/docs/Basics/Iterables/Map","docId":"Basics/Iterables/Map"},{"type":"link","label":"Set","href":"/lbc-javascript-docusite/docs/Basics/Iterables/Set","docId":"Basics/Iterables/Set"}]}]},{"type":"category","label":"Advanced","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Modulos","href":"/lbc-javascript-docusite/docs/Advanced/M\xf3dulos","docId":"Advanced/M\xf3dulos"}]}]},"docs":{"Advanced/M\xf3dulos":{"id":"Advanced/M\xf3dulos","title":"Modulos","description":"Los m\xf3dulos de JavaScript son una forma de organizar y estructurar el c\xf3digo. Permiten a los desarrolladores dividir su c\xf3digo en piezas m\xe1s peque\xf1as y reutilizables. Puede pensar en ellos como piezas de c\xf3digo m\xe1s peque\xf1as que puede importar y exportar entre diferentes partes de una aplicaci\xf3n.","sidebar":"tutorialSidebar"},"Basics/Iterables/Arrays":{"id":"Basics/Iterables/Arrays","title":"Arrays","description":"Arrays in JavaScript are a way to store a collection of values in a single variable. They can hold values of any data type, including strings, numbers, objects, and even other arrays. You can have duplicate elements in an array, and the element order is guaranteed.","sidebar":"tutorialSidebar"},"Basics/Iterables/Map":{"id":"Basics/Iterables/Map","title":"Maps","description":"In JavaScript, a map is a data structure used to store key-value pairs of data of any kind and length. It is similar to objects, but maps allow anything to be used as a key, whereas objects only allow strings, symbols, and numbers as keys. Maps are iterables and come with various methods.","sidebar":"tutorialSidebar"},"Basics/Iterables/Set":{"id":"Basics/Iterables/Set","title":"Set","description":"Set is a data structure in JavaScript used to store unique values of any type and length. In this reference manual, we will explore how to create and work with sets in JavaScript.","sidebar":"tutorialSidebar"},"Basics/Objetos":{"id":"Basics/Objetos","title":"Objetos","description":"In JavaScript, an object is a collection of key-value pairs, where the keys are strings and the values can be any JavaScript data type, including other objects. Objects are used extensively in JavaScript to represent complex data structures and provide a way to organize and manipulate data in a more intuitive way.","sidebar":"tutorialSidebar"},"Basics/variables":{"id":"Basics/variables","title":"Variables","description":"In JavaScript, a variable is a container that stores a value. You can use variables to store a wide variety of data types, such as numbers, strings, booleans, and objects.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Intro","description":"Here is an outline of the main topics that could be covered in a JavaScript language reference manual:","sidebar":"tutorialSidebar"}}}')}}]);